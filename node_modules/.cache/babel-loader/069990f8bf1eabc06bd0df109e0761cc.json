{"ast":null,"code":"import _regeneratorRuntime from \"/Users/borges/Desktop/Crypto-Currency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/borges/Desktop/Crypto-Currency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/borges/Desktop/Crypto-Currency/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/borges/Desktop/Crypto-Currency/src/pages/Home/index.tsx\";\n\nimport React, { useState } from 'react';\nimport api from '../../api';\nimport * as H from './styles';\nimport Bitcoin_Icon from '../../assets/Bitcoin_Icon.png';\nimport Ethereum_Icon from '../../assets/Ethereum_Icon.png';\n\nvar Home = function Home() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      priceBitcoinUSD = _useState2[0],\n      setPriceBitcoinUSD = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      priceBitcoinBRL = _useState4[0],\n      setPriceBitcoinBRL = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      priceEthereumUSD = _useState6[0],\n      setPriceEthereumUSD = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      priceEthereumBRL = _useState8[0],\n      setPriceEthereumBRL = _useState8[1];\n\n  function getAllCryptos() {\n    return _getAllCryptos.apply(this, arguments);\n  }\n\n  function _getAllCryptos() {\n    _getAllCryptos = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var cryptosResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get('coins/list', {\n                params: {\n                  include_platform: true\n                }\n              });\n\n            case 2:\n              cryptosResponse = _context.sent;\n              console.log(cryptosResponse);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getAllCryptos.apply(this, arguments);\n  }\n\n  function getAllSupportedCurrencies() {\n    return _getAllSupportedCurrencies.apply(this, arguments);\n  } //getAllCryptos()\n  //getAllSupportedCurrencies()\n\n\n  function _getAllSupportedCurrencies() {\n    _getAllSupportedCurrencies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var SupportedResponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get('simple/supported_vs_currencies');\n\n            case 2:\n              SupportedResponse = _context2.sent;\n              console.log(SupportedResponse);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getAllSupportedCurrencies.apply(this, arguments);\n  }\n\n  function pricesCrypto() {\n    return _pricesCrypto.apply(this, arguments);\n  }\n\n  function _pricesCrypto() {\n    _pricesCrypto = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var priceResponse;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api.get('simple/price', {\n                params: {\n                  ids: \"bitcoin,ethereum\",\n                  vs_currencies: \"usd,brl\",\n                  include_market_cap: true,\n                  include_24hr_vol: true,\n                  include_24hr_change: true,\n                  include_last_updated_at: true\n                }\n              });\n\n            case 2:\n              priceResponse = _context3.sent;\n              setPriceBitcoinUSD(priceResponse.data.bitcoin.usd);\n              setPriceEthereumUSD(priceResponse.data.ethereum.usd);\n              setPriceBitcoinBRL(priceResponse.data.bitcoin.brl);\n              setPriceEthereumBRL(priceResponse.data.ethereum.brl);\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _pricesCrypto.apply(this, arguments);\n  }\n\n  pricesCrypto();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(H.GlobalContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(H.CryptosContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(H.CryptoCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(H.CryptoIcon, {\n    src: Bitcoin_Icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(H.CryptoInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"BITCOIN\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"USD: \", priceBitcoinUSD, \" $\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, \"BRL: \", priceBitcoinBRL, \" R$\"))), /*#__PURE__*/React.createElement(H.CryptoCard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(H.CryptoIcon, {\n    src: Ethereum_Icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(H.CryptoInfo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, \"ETHEREUM\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, \"USD: \", priceEthereumUSD, \" $\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"BRL: \", priceEthereumBRL, \" R$\"))))));\n};\n\nexport default Home;","map":{"version":3,"names":["React","useState","api","H","Bitcoin_Icon","Ethereum_Icon","Home","priceBitcoinUSD","setPriceBitcoinUSD","priceBitcoinBRL","setPriceBitcoinBRL","priceEthereumUSD","setPriceEthereumUSD","priceEthereumBRL","setPriceEthereumBRL","getAllCryptos","get","params","include_platform","cryptosResponse","console","log","getAllSupportedCurrencies","SupportedResponse","pricesCrypto","ids","vs_currencies","include_market_cap","include_24hr_vol","include_24hr_change","include_last_updated_at","priceResponse","data","bitcoin","usd","ethereum","brl"],"sources":["/Users/borges/Desktop/Crypto-Currency/src/pages/Home/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport api from '../../api';\nimport * as H from './styles';\n\nimport Bitcoin_Icon from '../../assets/Bitcoin_Icon.png';\nimport Ethereum_Icon from '../../assets/Ethereum_Icon.png';\n\nconst Home: React.FC = () => {\n\n    const [priceBitcoinUSD, setPriceBitcoinUSD] = useState('');\n    const [priceBitcoinBRL, setPriceBitcoinBRL] = useState('');\n\n    const [priceEthereumUSD, setPriceEthereumUSD] = useState('');\n    const [priceEthereumBRL, setPriceEthereumBRL] = useState('');\n\n    \n    async function getAllCryptos(){\n\n        const cryptosResponse = await api.get('coins/list', {\n            params: {\n                include_platform: true\n            }\n        });\n        console.log(cryptosResponse)\n\n    }\n\n    async function getAllSupportedCurrencies(){\n\n        const SupportedResponse = await api.get('simple/supported_vs_currencies');\n        console.log(SupportedResponse)\n\n    }\n\n    //getAllCryptos()\n    //getAllSupportedCurrencies()\n\n    async function pricesCrypto(){\n\n        const priceResponse = await api.get('simple/price', {\n            params: {\n                ids: \"bitcoin,ethereum\",\n                vs_currencies: \"usd,brl\",\n                include_market_cap: true,\n                include_24hr_vol: true,\n                include_24hr_change :true,\n                include_last_updated_at: true,\n            }\n        })\n\n\n        setPriceBitcoinUSD(priceResponse.data.bitcoin.usd)\n        setPriceEthereumUSD(priceResponse.data.ethereum.usd)\n\n        setPriceBitcoinBRL(priceResponse.data.bitcoin.brl)\n        setPriceEthereumBRL(priceResponse.data.ethereum.brl)\n    }\n\n    pricesCrypto()\n\n    return (\n\n        <>\n\n            <H.GlobalContainer>\n                <H.CryptosContainer>\n                    <H.CryptoCard>\n                        <H.CryptoIcon src={Bitcoin_Icon}/>\n                        <H.CryptoInfo>\n                            <h1>BITCOIN</h1>\n                            <span>USD: {priceBitcoinUSD} $</span>\n                            <span>BRL: {priceBitcoinBRL} R$</span>\n                        </H.CryptoInfo>\n                    </H.CryptoCard>\n\n                    <H.CryptoCard>\n                        <H.CryptoIcon src={Ethereum_Icon}/>\n                        <H.CryptoInfo>\n                            <h1>ETHEREUM</h1>\n                            <span>USD: {priceEthereumUSD} $</span>\n                            <span>BRL: {priceEthereumBRL} R$</span>\n                        </H.CryptoInfo>\n                    </H.CryptoCard>\n                </H.CryptosContainer>\n            </H.GlobalContainer>\n            \n        </>\n\n    );\n};\n\nexport default Home;"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAM;EAAA,gBAEqBL,QAAQ,CAAC,EAAD,CAF7B;EAAA;EAAA,IAElBM,eAFkB;EAAA,IAEDC,kBAFC;;EAAA,iBAGqBP,QAAQ,CAAC,EAAD,CAH7B;EAAA;EAAA,IAGlBQ,eAHkB;EAAA,IAGDC,kBAHC;;EAAA,iBAKuBT,QAAQ,CAAC,EAAD,CAL/B;EAAA;EAAA,IAKlBU,gBALkB;EAAA,IAKAC,mBALA;;EAAA,iBAMuBX,QAAQ,CAAC,EAAD,CAN/B;EAAA;EAAA,IAMlBY,gBANkB;EAAA,IAMAC,mBANA;;EAAA,SASVC,aATU;IAAA;EAAA;;EAAA;IAAA,0EASzB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAEkCb,GAAG,CAACc,GAAJ,CAAQ,YAAR,EAAsB;gBAChDC,MAAM,EAAE;kBACJC,gBAAgB,EAAE;gBADd;cADwC,CAAtB,CAFlC;;YAAA;cAEUC,eAFV;cAOIC,OAAO,CAACC,GAAR,CAAYF,eAAZ;;YAPJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CATyB;IAAA;EAAA;;EAAA,SAoBVG,yBApBU;IAAA;EAAA,EA2BzB;EACA;;;EA5ByB;IAAA,sFAoBzB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAEoCpB,GAAG,CAACc,GAAJ,CAAQ,gCAAR,CAFpC;;YAAA;cAEUO,iBAFV;cAGIH,OAAO,CAACC,GAAR,CAAYE,iBAAZ;;YAHJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CApByB;IAAA;EAAA;;EAAA,SA8BVC,YA9BU;IAAA;EAAA;;EAAA;IAAA,yEA8BzB;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OAEgCtB,GAAG,CAACc,GAAJ,CAAQ,cAAR,EAAwB;gBAChDC,MAAM,EAAE;kBACJQ,GAAG,EAAE,kBADD;kBAEJC,aAAa,EAAE,SAFX;kBAGJC,kBAAkB,EAAE,IAHhB;kBAIJC,gBAAgB,EAAE,IAJd;kBAKJC,mBAAmB,EAAE,IALjB;kBAMJC,uBAAuB,EAAE;gBANrB;cADwC,CAAxB,CAFhC;;YAAA;cAEUC,aAFV;cAcIvB,kBAAkB,CAACuB,aAAa,CAACC,IAAd,CAAmBC,OAAnB,CAA2BC,GAA5B,CAAlB;cACAtB,mBAAmB,CAACmB,aAAa,CAACC,IAAd,CAAmBG,QAAnB,CAA4BD,GAA7B,CAAnB;cAEAxB,kBAAkB,CAACqB,aAAa,CAACC,IAAd,CAAmBC,OAAnB,CAA2BG,GAA5B,CAAlB;cACAtB,mBAAmB,CAACiB,aAAa,CAACC,IAAd,CAAmBG,QAAnB,CAA4BC,GAA7B,CAAnB;;YAlBJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CA9ByB;IAAA;EAAA;;EAmDzBZ,YAAY;EAEZ,oBAEI,uDAEI,oBAAC,CAAD,CAAG,eAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,CAAD,CAAG,gBAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,CAAD,CAAG,UAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,CAAD,CAAG,UAAH;IAAc,GAAG,EAAEpB,YAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,CAAD,CAAG,UAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,aADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAYG,eAAZ,OAFJ,eAGI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAYE,eAAZ,QAHJ,CAFJ,CADJ,eAUI,oBAAC,CAAD,CAAG,UAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI,oBAAC,CAAD,CAAG,UAAH;IAAc,GAAG,EAAEJ,aAAnB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,eAEI,oBAAC,CAAD,CAAG,UAAH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cADJ,eAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAYM,gBAAZ,OAFJ,eAGI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,YAAYE,gBAAZ,QAHJ,CAFJ,CAVJ,CADJ,CAFJ,CAFJ;AA6BH,CAlFD;;AAoFA,eAAeP,IAAf"},"metadata":{},"sourceType":"module"}